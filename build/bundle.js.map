{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/docs/authapi.md","../../src/docs/dnsapi.md","../../src/docs/home.md","../../src/docs/scriptdns.md","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/index.mjs","../../node_modules/rollup-plugin-mdsvex-pages/src/components/MDPNavbar.svelte","../../node_modules/rollup-plugin-mdsvex-pages/src/components/MDPSidebar.svelte","../../node_modules/rollup-plugin-mdsvex-pages/src/components/MDPWrapper.svelte","../../src/Redir.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.6' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","---\nid: auth\ntitle: Authentication API\n---\n\n# Authentication\n\n#### Log a user in\n\n`POST /user/login`\n\n| Name     | Description           | Validation          |\n|----------|-----------------------|---------------------|\n| email    | User's email address  | Email address       |\n| password | User's password       | Min 10 characters   |\n\n#### Example:\n\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\": \"user1@example.com\", \"password\": \"your-password\"}' \\\n  https://packetframe.com/api/user/login\n```\n\n#### Create a new user account\n\n`POST /user/signup`\n\n| Name     | Description                           | Validation        |\n|----------|---------------------------------------|-------------------|\n| email    | User's email address                  | Email address     |\n| password | User's password                       | Min 10 characters |\n| ref      | Where did you hear about Packetframe? |                   |\n\n#### Example:\n\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\": \"user1@example.com\", \"password\": \"your-password\", \"ref\": \"Nate\"}' \\\n  https://packetframe.com/api/user/signup\n```\n\n#### Delete a user account\n\n`DELETE /user/delete`\n\n#### Example:\n\n```bash\ncurl -X DELETE \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  https://packetframe.com/api/user/delete\n```\n\n#### Change a user's password\n\n`POST /user/password`\n\n| Name     | Description  | Validation             |\n|----------|--------------|------------------------|\n| password | New password | At least 10 characters |\n\n#### Example:\n\n```bash\ncurl -X POST \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"password\": \"new-password\"}' \\\n  https://packetframe.com/api/user/password\n```\n\n#### Get user info\n\n`GET /user/info`\n\n#### Example:\n\n```bash\ncurl -X GET \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  https://packetframe.com/api/user/info\n```\n","---\nid: dns\ntitle: DNS API\n---\n\n# DNS\n\n#### List all DNS zones authorized for a user\n\n`GET /dns/zones`\n\n#### Example:\n\n```bash\ncurl -X GET \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n   https://packetframe.com/api/dns/zones\n```\n\n#### Add a new DNS zone\n\n`POST /dns/zones`\n\n| Name     | Description | Validation |\n|----------|-------------|------------|\n| zone     | DNS Zone    | Zone FQDN  |\n\n#### Example:\n\n```shell\ncurl -X POST \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"zone\": \"example.com\"}' \\\n  https://packetframe.com/api/dns/zones\n```\n\n#### Delete a DNS zone\n\n`DELETE /dns/zones`\n\n| Name | Description | Validation |\n|------|-------------|------------|\n| id   | Zone ID     |            |\n\n#### Example:\n\n```shell\ncurl -X DELETE \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"id\": \"62244cdb-edb9-48ea-aeed-bad54bb70f9e\"}' \\\n  https://packetframe.com/api/dns/zones\n```\n\n#### Add a user to a DNS zone\n\n`PUT /dns/zones/user`\n\n| Name | Description | Validation |\n|------|-------------|------------|\n| zone | Zone ID     |            |\n| user | User email  |            |\n\n\n#### Example:\n\n```shell\ncurl -X PUT \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"zone\": \"62244cdb-edb9-48ea-aeed-bad54bb70f9e\", \"user\": \"user1@example.com\"}' \\\n  https://packetframe.com/api/dns/zones/user\n```\n\n#### Remove a user from a DNS zone\n\n`DELETE /dns/zones/user`\n\n| Name | Description | Validation |\n|------|-------------|------------|\n| zone | Zone ID     |            |\n| user | User email  |            |\n\n#### Example:\n\n```shell\ncurl -X DELETE \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"zone\": \"62244cdb-edb9-48ea-aeed-bad54bb70f9e\", \"user\": \"user1@example.com\"}' \\\n  https://packetframe.com/api/dns/zones/user\n```\n\n#### List DNS records for a zone\n\n`GET /dns/records/:id`\n\n| Name | Description | Validation |\n|------|-------------|------------|\n| zone | Zone ID     |            |\n| user | User email  |            |\n\n#### Example:\n\n```shell\ncurl -X DELETE \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"zone\": \"62244cdb-edb9-48ea-aeed-bad54bb70f9e\", \"user\": \"user1@example.com\"}' \\\n  https://packetframe.com/api/dns/zones/user\n```\n\n#### Add a DNS record to a zone\n\n`POST /dns/records`\n\n| Name    | Description                   | Validation                                                                          |\n|---------|-------------------------------|-------------------------------------------------------------------------------------|\n| zone    | Zone ID                       |                                                                                     |\n| type    | Record Type                   | (\"A\", \"AAAA\", \"CNAME\", \"TXT\", \"MX\", \"SRV\", \"NS\", \"SCRIPT\") and part of valid record |\n| label   | Record Label                  | Less than 255 characters and part of valid record                                   |\n| value   | Record Value                  | Part of valid record                                                                |\n| ttl     | Time To Live                  | Greater than 0 and part of valid record                                             |\n\n#### Example:\n\n```shell\ncurl -X POST \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"zone\": \"62244cdb-edb9-48ea-aeed-bad54bb70f9e\", \"label\": \"@\", \"type\": \"A\", \"value\": \"192.0.2.1\", \"ttl\": 300}' \\\n  https://packetframe.com/api/dns/records\n```\n\n#### Delete a DNS record from a zone\n\n`DELETE /dns/records`\n\n| Name   | Description  | Validation                                                                          |\n|--------|--------------|-------------------------------------------------------------------------------------|\n| zone   | Zone ID      |                                                                                     |\n| record | Record ID    |                                                                                     |\n\n#### Example:\n\n```shell\ncurl -X DELETE \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"zone\": \"62244cdb-edb9-48ea-aeed-bad54bb70f9e\", \"id\": \"967e3a9e-abb3-4bf0-87b8-d03bed13c95f\"}' \\\n  https://packetframe.com/api/dns/records\n```\n\n#### Update a DNS record\n\n`PUT /dns/records`\n\n| Name  | Description  | Validation                                                                          |\n|-------|--------------|-------------------------------------------------------------------------------------|\n| zone  | Zone ID      |                                                                                     |\n| id    | Record ID    |                                                                                     |\n| type  | Record Type  | (\"A\", \"AAAA\", \"CNAME\", \"TXT\", \"MX\", \"SRV\", \"NS\", \"SCRIPT\") and part of valid record |\n| label | Record Label | Less than 255 and part of valid record                                              |\n| value | Record Value | Part of valid record                                                                |\n| ttl   | Time To Live | Greater than 0 and part of valid record                                             |\n\n#### Example:\n\n```shell\ncurl -X PUT \\\n  -H \"Authorization: Token <packetframe-api-token>\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"zone\": \"62244cdb-edb9-48ea-aeed-bad54bb70f9e\", \"id\": \"967e3a9e-abb3-4bf0-87b8-d03bed13c95f\", \"label\": \"@\", \"type\": \"A\", \"value\": \"192.0.2.1\", \"ttl\": 300}' \\\n  https://packetframe.com/api/dns/records\n```\n","---\nid: .\ntitle: Documentation\n---\n\n# Packetframe Documentation\n\n## Getting Started\n\nPacketframe's API exposes all functionality of the Packetframe platform under a single HTTP API.\n\n[DNSControl](https://github.com/StackExchange/dnscontrol/) supports the [Packetframe Provider](https://stackexchange.github.io/dnscontrol/providers/packetframe) to declaratively manage DNS records. \n\n## More information\n\nSee the Packetframe main site (https://packetframe.com) for more information.\n","---\nid: script-dns\n\ntitle: SCRIPT DNS\n---\n\n# SCRIPT DNS Record Type\n\nSCRIPT records contain a JavaScript function that’s executed on each DNS query to determine the corresponding answer.\n\nLet’s say you’re in need of a tasty dessert but don’t want to leave your command line:\n\n```bash\n~ $ dig +short TXT dessert.script.packetframe.com @script-ns.packetframe.com\n\"Salted Caramel Cake with Whipped Cream\"\n```\n\nUnder the hood, this is just a simple asynchronous JavaScript function that calls out to an API to retreive random\ndesserts.\n\n```js\nasync function handleQuery(query) {\n    return await fetch(\"https://random-data-api.com/api/dessert/random_dessert\")\n        .then(resp => resp.json())\n        .then(data => {\n            return {\n                \"authoritative\": true,\n                \"rrs\": [\n                    {\n                        name: query.name,\n                        ttl: 300,\n                        type: \"TXT\",\n                        value: '\"' + data[\"flavor\"] + \" \" + data[\"variety\"] + \" with \" + data[\"topping\"] + '\"'\n                    }\n                ]\n            }\n        })\n}\n```\n\n\nMore practically speaking, SCRIPT records simplify popular GeoIP DNS routing and open up a whole new range of new\nDNS-based load balancing, DDoS mitigation, and traffic engineering possibilities.\n\nWe pass a query object to handleQuery and await the promise. Here’s a quick example of what that query object currently\ncontains:\n\n```bash\n~ $ dig +short +subnet=192.0.2.0/24 TXT query.script.packetframe.com @script-ns.packetframe.com\n\"{'name':'query.script.packetframe.com.','type':'TXT','subnet':'192.0.2.0/24/0','cookie':'d551f2af83ce9fda'}\"\n```\n\n```js\nasync function handleQuery(query) {\n    return {\n        \"authoritative\": true,\n        \"rrs\": [\n            {\n                name: query.name,\n                ttl: 86400,\n                type: \"TXT\",\n                value: JSON.stringify(query).replaceAll('\"', \"'\")\n            }\n        ]\n    }\n}\n```\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, writable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Store that returns the currently-matched params.\n * Despite this being writable, consumers should not change the value of the store.\n * It is exported as a readable store only (in the typings file)\n */\nexport const params = writable(undefined)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        const newState = {\n            ...history.state\n        }\n        delete newState['__svelte_spa_router_scrollX']\n        delete newState['__svelte_spa_router_scrollY']\n        window.history.replaceState(newState, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Dictionary with options for the link action.\n * @typedef {Object} LinkActionOpts\n * @property {string} href - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n * @property {boolean} disabled - If true, link is disabled\n */\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string|LinkActionOpts} opts - Options object. For legacy reasons, we support a string too which will be the value for opts.href\n */\nexport function link(node, opts) {\n    opts = linkOpts(opts)\n\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, opts)\n\n    return {\n        update(updated) {\n            updated = linkOpts(updated)\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, opts) {\n    let href = opts.href || node.getAttribute('href')\n\n    // Destination must start with '/' or '#/'\n    if (href && href.charAt(0) == '/') {\n        // Add # to the href attribute\n        href = '#' + href\n    }\n    else if (!href || href.length < 2 || href.slice(0, 2) != '#/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    node.setAttribute('href', href)\n    node.addEventListener('click', (event) => {\n        // Prevent default anchor onclick behaviour\n        event.preventDefault()\n        if (!opts.disabled) {\n            scrollstateHistoryHandler(event.currentTarget.getAttribute('href'))\n        }\n    })\n}\n\n// Internal function that ensures the argument of the link action is always an object\nfunction linkOpts(val) {\n    if (val && typeof val == 'string') {\n        return {\n            href: val\n        }\n    }\n    else {\n        return val || {}\n    }\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {string} href - Destination\n */\nfunction scrollstateHistoryHandler(href) {\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {onDestroy, createEventDispatcher, afterUpdate} from 'svelte'\nimport {parse} from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = parse(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {boolean} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\nlet popStateChanged = null\nif (restoreScrollState) {\n    popStateChanged = (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.__svelte_spa_router_scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    }\n    // This is removed in the destroy() invocation below\n    window.addEventListener('popstate', popStateChanged)\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.__svelte_spa_router_scrollX, previousScrollState.__svelte_spa_router_scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nconst unsubscribeLoc = loc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData,\n            params: (match && typeof match == 'object' && Object.keys(match).length) ? match : null\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n\n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name,\n                    params: componentParams\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name,\n            params: componentParams\n        })).then(() => {\n            params.set(componentParams)\n        })\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n    params.set(undefined)\n})\n\nonDestroy(() => {\n    unsubscribeLoc()\n    popStateChanged && window.removeEventListener('popstate', popStateChanged)\n})\n</script>\n","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","<script>\r\n    let navbar = {};\r\n    import { location } from 'svelte-spa-router'\r\n\r\n    const routes = Object.keys(navbar);\r\n    $: current = routes.indexOf($location.split('/')[1]);\r\n</script>\r\n\r\n{#if current !== -1}\r\n    <nav class=\"navbar\">\r\n        <div class=\"navbar-content\">\r\n            <a class=\"navbar-brand\" href={navbar[routes[current]][\"brand-link\"] ? navbar[routes[current]][\"brand-link\"] : `/#/${routes[current]}`}>\r\n                {#if Object.keys(navbar[routes[current]]).includes('logo')}\r\n                <img class=\"navbar-logo\" alt={navbar[routes[current]].logo.alt} src={navbar[routes[current]].logo.src}/>\r\n                {/if}\r\n                {#if Object.keys(navbar[routes[current]]).includes('title')}\r\n                {navbar[routes[current]].title}\r\n                {/if}\r\n            </a>\r\n            {#if Object.keys(navbar[routes[current]]).includes('links')}\r\n            {#each navbar[routes[current]].links as link}\r\n                {#if link.global}\r\n                    <a href={link.route} class=\"navbar-link\">{link.label}</a>\r\n                {:else}\r\n                    <a href={'/#/' + routes[current] + '/' + link.route} class=\"navbar-link\">{link.label}</a>\r\n                {/if}\r\n            {/each}\r\n            {/if}\r\n        </div>\r\n    </nav>\r\n{/if}\r\n\r\n\r\n<style>\r\n    .navbar {\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: auto;\r\n        min-height: var(--mdp-navbar-height);\r\n        padding: 8px 16px;\r\n        border-bottom: var(--mdp-navbar-border);\r\n        box-shadow: var(--mdp-navbar-box-shadow);\r\n        position: relative;\r\n        top: 0;\r\n        background: var(--mdp-background-color);\r\n        z-index: 1000;\r\n    }\r\n    .navbar-brand {\r\n        margin: 0px;\r\n        padding: 0px;\r\n        margin-right: 1rem;\r\n        font-size: 2rem;\r\n        font-weight: bold;\r\n        font-size: x-large;\r\n        display: flex;\r\n        align-items: center;\r\n        height: 2rem;\r\n        text-decoration: none;\r\n        color: var(--mdp-text-color);\r\n    }\r\n    .navbar-logo {\r\n        display: block;\r\n        margin-right: .5rem;\r\n        height: 100%;\r\n    }\r\n    .navbar-content {\r\n        margin: 0px;\r\n        padding: 0px;\r\n        width: auto;\r\n        display: flex;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        flex: 1 1 0;\r\n    }\r\n    .navbar-link { \r\n        margin: 0px;\r\n        padding: 4px 12px;\r\n        text-decoration: none;\r\n        color: var(--mdp-text-color);\r\n    }\r\n</style>","<script>\r\n\r\n    let sidebar = {};\r\n    import { location } from 'svelte-spa-router'\r\n    import { beforeUpdate } from 'svelte';\r\n\r\n    Object.keys(sidebar).forEach((route) => {\r\n        Object.keys(sidebar[route]).forEach((category) => {\r\n            if (category !== 'default-open') {\r\n                    sidebar[route][category] = {\r\n                    items: sidebar[route][category],\r\n                    open: sidebar[route]['default-open'].includes(category),\r\n                }\r\n            }\r\n        })\r\n    })\r\n\r\n    export let condensed = false;\r\n    let condensedRef = condensed;\r\n\r\n    const setAllClosed = () => {\r\n        Object.keys(sidebar).forEach((route) => {\r\n            Object.keys(sidebar[route]).forEach((category) => {\r\n                if (category !== 'default-open') {\r\n                    if(sidebar[route][category].open) {\r\n                        sidebar[route][category].open = false;\r\n                    }\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const setAllDefaults = () => {\r\n        Object.keys(sidebar).forEach((route) => {\r\n            Object.keys(sidebar[route]).forEach((category) => {\r\n                if (category !== 'default-open') {\r\n                    sidebar[route][category].open = sidebar[route]['default-open'].includes(category);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    beforeUpdate(() => {\r\n        if (!condensedRef && condensed) {\r\n            setAllClosed();\r\n        } else if (condensedRef && !condensed) {\r\n            setAllDefaults();\r\n        }\r\n        condensedRef = condensed;\r\n    })\r\n\r\n    const routes = Object.keys(sidebar);\r\n    $: current = routes.indexOf($location.split('/')[1]);\r\n\r\n</script>\r\n\r\n{#if current !== -1}\r\n    <div class=\"sidebar\" class:condensed>\r\n        <ul class=\"sidebar-content\">\r\n            {#each Object.keys(sidebar[routes[current]]) as category}\r\n                {#if category !== 'default-open'}\r\n                <li class=\"sidebar-category-li\">\r\n                    <ul class=\"sidebar-category-wrapper\">\r\n                        <li on:click={() => {sidebar[routes[current]][category].open = !sidebar[routes[current]][category].open}} class=\"sidebar-category\">\r\n                            {category}\r\n                            <span class=\"arrow\" class:rotate={sidebar[routes[current]][category].open}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32px\" height=\"32px\" viewBox=\"0 0 24 24\"><path d=\"M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z\"></path></svg>\r\n                            </span>\r\n                        </li>\r\n                        <ul class=\"sidebar-category-items\" class:rotate={sidebar[routes[current]][category].open}>\r\n                        {#each sidebar[routes[current]][category].items as link}\r\n                            <li class=\"sidebar-category-item-li\" on:click={() => {condensed ? sidebar[routes[current]][category].open = !sidebar[routes[current]][category].open : null}}>\r\n                                <a class:active={link.route == \"\" ? $location.replace(/\\//g, '') == routes[current] : $location.includes(link.route)} class=\"sidebar-category-item\" href={'/#/' + routes[current] + '/' + link.route}>{link.label}</a>\r\n                            </li>\r\n                        {/each}\r\n                        </ul>\r\n                    </ul>\r\n                </li>\r\n                {/if}\r\n            {/each}\r\n        </ul>\r\n    </div>\r\n{/if}\r\n\r\n\r\n<style>\r\n    .sidebar {\r\n        color: var(--mdp-text-color);\r\n        min-width: var(--mdp-sidebar-width);\r\n        height: 100vh;\r\n        position: -webkit-sticky;\r\n        position: sticky;\r\n        top: 0;\r\n        left: 0;\r\n        background-color: var(--mdp-background-color);\r\n        border-right: var(--mdp-sidebar-border);\r\n        margin-right: calc(var(--mdp-content-sidebar-padding));\r\n    }\r\n    .sidebar.condensed {\r\n        min-width: 100%;\r\n        height: auto;\r\n        border-right: none;\r\n        border-bottom: var(--mdp-sidebar-border);\r\n    }\r\n    .sidebar-content {\r\n        width: auto;\r\n        display: flex;\r\n        margin: 8px;\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n        list-style-type: none;\r\n        padding: 0px;\r\n        margin-top: var(--mdp-sidebar-content-margin-top);\r\n    }\r\n    .sidebar-category {\r\n        text-decoration: none;\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n        width: auto;\r\n        margin-bottom: 0px;\r\n        cursor: pointer;\r\n        display: flex;\r\n        border-radius: .25rem;\r\n        height: 32px;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        list-style-type: none;\r\n        padding: 6px 16px;\r\n    }\r\n    .sidebar-category:hover {\r\n        background-color: var(--mdp-sidebar-hover);\r\n    }\r\n    .sidebar-category-li {\r\n        width: 100%;\r\n    }\r\n    .sidebar-category-wrapper {\r\n        margin-bottom:4px;\r\n        width:100%;\r\n        list-style-type:none;\r\n        padding:0px;\r\n    }\r\n    .sidebar-category-items {\r\n        margin-left:16px;\r\n        display:none;\r\n        list-style-type:none;\r\n        padding:0px;\r\n    }\r\n    .sidebar-category-item-li {\r\n        list-style-type:none;\r\n        display:block;\r\n        width:auto;\r\n    }\r\n    .sidebar-category-item {\r\n        border-radius: .25rem;\r\n        padding: 6px 16px;\r\n        color: var(--mdp-text-color);\r\n        margin: 0.25rem 0;\r\n        font-size: 16px;\r\n        text-decoration: none;\r\n        display: block;\r\n    }\r\n    .sidebar-category-item:hover {\r\n        background-color: var(--mdp-sidebar-hover);\r\n    }\r\n    .active {\r\n        background-color: var(--mdp-sidebar-active);\r\n    }\r\n    .arrow {\r\n        fill: var(--mdp-text-color);\r\n        float:right;\r\n        margin-right:8px;\r\n        width:32px;\r\n        height:32px;\r\n        transform:rotate(90deg);\r\n        transition:transform .2s linear;\r\n    }\r\n    .rotate {\r\n        transform:rotate(180deg);\r\n    }\r\n    ul.rotate {\r\n        display:block;\r\n        transform:none;\r\n    }\r\n</style>\r\n\r\n","<script>\r\n    import MDPNavbar from './MDPNavbar.svelte'\r\n    import MDPSidebar from './MDPSidebar.svelte'\r\n    export let sidebar = true;\r\n    export let navbar = true;\r\n\r\n    export let styles = {};\r\n    const defaultStyles = {\r\n        'sidebar-width': '300px',\r\n        'navbar-height': '60px',\r\n        'background-color': 'white',\r\n        'text-color': 'black',\r\n        'sidebar-active': '#ebedf0',\r\n        'sidebar-hover': '#ebedf0',\r\n        'sidebar-border': '1px solid #dadde1',\r\n        'navbar-border': 'none',\r\n        'navbar-box-shadow': '0px 1px #dadde1',\r\n        'sidebar-margin-top': navbar ? '60px' : '0px',\r\n        'sidebar-content-margin-top': '12px',\r\n        'content-sidebar-padding': '15px',\r\n        'sidebar-breakpoint': '900px',\r\n    }\r\n\r\n    // Check if the object has a property.\r\n    function has(obj, propName) {\r\n        return Object.prototype.hasOwnProperty.call(obj, propName)\r\n    }\r\n\r\n    // Compare both changed and default options to return one object with what is needed.\r\n    function getStyles(opts) {\r\n        var options = {};\r\n  \r\n        for (var opt in defaultStyles)\r\n            { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultStyles[opt]; }\r\n\r\n        return options\r\n    }\r\n\r\n    let actualStyles = getStyles(styles);\r\n\r\n    Object.keys(actualStyles).forEach((style) => {\r\n        document.documentElement.style.setProperty('--mdp-' + style, actualStyles[style]);\r\n    })\r\n\r\n    let screenWidth;\r\n    let breakpoint = Number.parseInt(actualStyles['sidebar-breakpoint'].replace(/px/g, ''));\r\n    let sidebarWidth = actualStyles['sidebar-width'].includes('px') ? Number.parseInt(actualStyles['sidebar-width'].replace(/px/g, '')) : null;\r\n\r\n</script>\r\n\r\n<svelte:window bind:innerWidth={screenWidth}/>\r\n\r\n{#if navbar}\r\n<MDPNavbar />\r\n{/if}\r\n\r\n<div class=\"mdp-wrapper\" class:condensed={sidebarWidth == null ? false : screenWidth <= breakpoint + sidebarWidth}>\r\n    {#if sidebar}\r\n        <MDPSidebar condensed={sidebarWidth == null ? false : screenWidth <= breakpoint + sidebarWidth} />\r\n    {/if}\r\n    <div class=\"content\" class:condensed={sidebarWidth == null ? false : screenWidth <= breakpoint + sidebarWidth}>\r\n        <slot></slot>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .content {\r\n        flex-grow: 1;\r\n        margin-left: 0px;\r\n        overflow: auto;\r\n        /* margin-top: 25px; */\r\n    }\r\n    .content.condensed {\r\n        max-width: calc(100% - var(--mdp-content-sidebar-padding));\r\n    }\r\n    .mdp-wrapper {\r\n        max-width: 100%;\r\n        display: flex;\r\n        text-rendering: geometricprecision;\r\n    }\r\n    .mdp-wrapper.condensed {\r\n        flex-direction: column;\r\n        /* align-items: center; */\r\n    }\r\n</style>","<script>\n    window.location = \"/#/docs\"\n</script>\n","<script>\n    import Router from \"svelte-spa-router\";\n    import MDPWrapper from \"rollup-plugin-mdsvex-pages/src/components/MDPWrapper.svelte\";\n    import Redir from \"./Redir.svelte\";\n\n    const routes = {\"*\": Redir};\n</script>\n\n<MDPWrapper styles={{\n\t\"text-color\": \"white\",\n\t\"background-color\": \"black\",\n\t\"sidebar-active\": \"#2b2b2b\",\n\t\"sidebar-hover\": \"#2b2b2b\",\n\t\"content-sidebar-padding\": \"30px\"\n}}>\n    <main>\n        <Router {routes}/>\n        <footer>\n            &copy; Packetframe 2022\n        </footer>\n    </main>\n</MDPWrapper>\n\n<style>\n    footer {\n        color: white;\n        text-align: center;\n        padding: 15px;\n    }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","set_current_component","get_current_component","Error","onDestroy","createEventDispatcher","type","detail","bubbles","e","createEvent","initCustomEvent","custom_event","call","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","Set","flushidx","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","key","undefined","get_spread_object","spread_props","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","h1","h40","p0","table0","h41","pre0","h42","p1","table1","h43","pre1","h44","p2","h45","pre2","h46","p3","table2","h47","pre3","h48","p4","h49","pre4","prevTitle","title","table3","h410","p5","table4","h411","pre5","h412","p6","table5","h413","pre6","h414","p7","table6","h415","pre7","h416","p8","table7","h417","pre8","h20","h21","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","switch_instance_spread_levels","params","getLocation","hashPosition","window","location","substr","qsPosition","querystring","loc","$loc","routes","prefix","restoreScrollState","RouteItem","path","_sveltesparouter","charAt","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","parse","conditions","userData","_pattern","_keys","startsWith","match","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","popStateChanged","state","__svelte_spa_router_scrollY","scrollTo","__svelte_spa_router_scrollX","lastLoc","componentObj","unsubscribeLoc","newLoc","checkConditions","$$invalidate","loading","loadingParams","loaded","default","history","scrollRestoration","includes","a_href_value","nav","div","img","img_alt_value","logo","alt","img_src_value","t_value","t","each_value","links","label","global","create_if_block_2","if_block","create_if_block","navbar","docs","current","$location","ul","each_value_1","items","span","open","ul0","li1","ul1","li0","t0","t0_value","replace","li","create_if_block_1","sidebar","Platform","API","Features","default-open","category","condensed","condensedRef","mdpsidebar_changes","slot_ctx","div0","div1","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","Math","max","styles","defaultStyles","sidebar-width","navbar-height","background-color","text-color","sidebar-active","sidebar-hover","sidebar-border","navbar-border","navbar-box-shadow","sidebar-margin-top","sidebar-content-margin-top","content-sidebar-padding","sidebar-breakpoint","screenWidth","actualStyles","opts","propName","opt","prototype","hasOwnProperty","getStyles","style","documentElement","setProperty","breakpoint","Number","parseInt","sidebarWidth","main","footer","/docs/auth","authapidocs","/docs/dns","dnsapidocs","/docs/","homedocs","/docs/script-dns","scriptdnsdocs","*","Redir","body"],"mappings":"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"}